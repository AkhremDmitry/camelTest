<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring
    http://camel.apache.org/schema/spring/camel-spring.xsd">

    <context:annotation-config />

    <bean id="objectMapper" class="org.dozer.DozerBeanMapper">
        <property name="mappingFiles">
            <list>
                <value>dozerBeanMapping.xml</value>
            </list>
        </property>
    </bean>

    <bean id="jsonMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

    <bean id="receiveAndTransformProcessor" class="com.epam.brest.course.camel.ReceiveAndTransformProcessor"/>

    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <!-- A Java DSL example is also available at -->
        <package>org.apache.camel.test</package>


        <route id="camel-http-proxy">
            <from uri="jetty://http://localhost:8050?matchOnUriPrefix=true"/>
            <to uri="direct:saveReqBody"/>
        </route>

        <route id="saveReqBody">
            <from uri="direct:saveReqBody" id="saveBody"/>
            <convertBodyTo type="String"/>
            <setProperty propertyName="reqBody">
                <simple>${in.body}</simple>
            </setProperty>
            <process ref="receiveAndTransformProcessor"/>
            <to uri="file:/home/felix/tmp/req?allowNullBody=true" id="fileReq"/>
            <setBody>
                <simple>${property.reqBody}</simple>
            </setBody>
            <to uri="http://localhost:8090?bridgeEndpoint=true&amp;throwExceptionOnFailure=false" id="destinationEndpoint"/>
            <convertBodyTo type="String"/>
            <setProperty propertyName="respBody">
                <simple>${in.body}</simple>
            </setProperty>
            <process ref="receiveAndTransformProcessor"/>
            <to uri="file:/home/felix/tmp/resp" id="fileResp"/>
            <setBody>
                <simple>${property.respBody}</simple>
            </setBody>
        </route>


    </camelContext>
</beans>